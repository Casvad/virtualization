{"version":3,"sources":["repositories/MessageRepository.js","views/MessageView.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","configuration","headers","MessageRepository","get","then","response","data","message","post","MessageView","props","state","messages","inputText","getMessages","setState","className","Grid","container","spacing","style","paddingTop","item","xs","TextField","id","label","variant","value","this","fullWidth","InputLabelProps","size","onChange","text","setText","target","Button","onClick","createText","createMessage","map","index","getMessage","messageData","created_at","paddingLeft","paddingRight","Card","CardActionArea","backgroundColor","borderColor","CardContent","Typography","color","gutterBottom","component","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67704f87.chunk.js","sourcesContent":["const axios = require('axios');\n\nconst configuration = {\n    headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n    }\n}\n\nconst MessageRepository = {}\n\nMessageRepository.getMessages = function(){\n    \n    return axios.get('/messages', configuration).then(response => response.data)\n}\n\nMessageRepository.createMessage = function(message){\n    \n    return axios.post('/messages', {\n        message\n    },configuration).then(response => response.data)\n}\n\nexport default MessageRepository;","\nimport React from 'react';\n\nimport '../App.css';\nimport PropTypes from \"prop-types\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport MessageRepository from '../repositories/MessageRepository';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n\nexport default class MessageView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      inputText: \"\"\n    };\n  }\n\n  componentDidMount() {\n    MessageRepository.getMessages().then(data => {\n      this.setState({\n        ...this.state,\n        messages: data\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Grid container spacing={4} style={{paddingTop:\"10%\"}}>\n            <Grid item xs={1} />\n            <Grid item xs={6}>\n              <TextField\n                id=\"filled-basic\"\n                label=\"Insertar mensaje\"\n                variant=\"outlined\"\n                value={this.state.inputText}\n                fullWidth\n                InputLabelProps={{\n                  className: \"App-text\",\n\n                }}\n                size=\"small\"\n                onChange={(text) => this.setText(text.target.value)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                onClick={() => this.createText()}\n              >Crear\n              </Button>\n            </Grid>\n            <Grid item xs={1} />\n          </Grid>\n          {this.getMessages()}\n        </header>\n      </div>\n    );\n  }\n\n  setText(inputText) {\n\n    this.setState({\n      ...this.state,\n      inputText\n    })\n  }\n\n  createText() {\n    MessageRepository.createMessage(this.state.inputText).then(response => {\n      MessageRepository.getMessages().then(data => {\n        this.setState({\n          ...this.state,\n          messages: data,\n          inputText: \"\"\n        })\n      })\n    })\n  }\n\n  getMessages() {\n    return (\n      <Grid container spacing={1} className=\"cardList\">\n        {\n          this.state.messages.map((message, index) => {\n            return this.getMessage(message, index)\n          })\n        }\n      </Grid>\n\n    )\n  }\n\n  getMessage(messageData, index) {\n    const { message, created_at } = messageData;\n    return (\n      <Grid item xs={12} key={index} className=\"messageGridElement\" style={{ paddingLeft: \"10%\", paddingRight: \"10%\" }}>\n        <Card>\n          <CardActionArea style={{ backgroundColor: \"#353b45\", borderColor: \"white\" }}>\n            <CardContent>\n              <Grid container spacing={1}>\n                <Grid item xs={2}>\n                  <Typography variant=\"body2\" color=\"white\">\n                    {created_at}\n                  </Typography>\n                </Grid>\n                <Grid item xs={10}>\n                  <Typography gutterBottom variant=\"h6\" component=\"div\" color=\"white\">\n                    {message}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    )\n  }\n}","\nimport MessageView from './views/MessageView';\n\nfunction App() {\n  return (\n    <MessageView/>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}